#!/bin/bash

ENABLED=0
[ -e /etc/default/cloud ] && . /etc/default/cloud

CMDLINE=$(cat /var/cache/cloud/cmdline)

mkdir -p /var/log/cosmic/agent

LOG_FILE=/var/log/cosmic/agent/cloud_init.log

TYPE="router"
for i in $CMDLINE
  do
    # search for foo=bar pattern and cut out foo
    FIRSTPATTERN=$(echo $i | cut -d= -f1)
    case $FIRSTPATTERN in
      type)
          TYPE=$(echo $i | cut -d= -f2)
      ;;
    esac
done

# Source function library.
if [ -f /etc/init.d/functions ]
then
  . /etc/init.d/functions
fi

if [ -f ./lib/lsb/init-functions ]
then
  . /lib/lsb/init-functions
fi

_success() {
  if [ -f /etc/init.d/functions ]
  then
    success
  else
    echo "Success"
  fi
}

_failure() {
  if [ -f /etc/init.d/functions ]
  then
    failure
  else
    echo "Failed"
  fi
}
RETVAL=$?
COSMIC_HOME="/opt/cosmic/agent"
if [ -f  $COSMIC_HOME/utils.sh ];
then
  . $COSMIC_HOME/utils.sh
else
  _failure
fi

start() {
   local pid=$(get_pids)
   if [ "$pid" != "" ]; then
       echo "Cosmic Agent is already running, PID = $pid"
       return 0
   fi

   echo -n "Starting Cosmic Agent (type=$TYPE) "
   if [ -f $COSMIC_HOME/run.sh ];
   then
     if [ "$pid" == "" ]
     then
       (cd $COSMIC_HOME; nohup ./run.sh > $LOG_FILE 2>&1 & )
       pid=$(get_pids)
       echo $pid > /var/run/cloud.pid
     fi
     _success
   else
     _failure
   fi
   echo
   echo 'start' > $COSMIC_HOME/user_request
}

stop() {
  local pid
  echo -n  "Stopping Cosmic Agent (type=$TYPE): "
  for pid in $(get_pids)
  do
    kill $pid
  done
  _success
  echo
  echo 'stop' > $COSMIC_HOME/user_request
}

status() {
  local pids=$(get_pids)
  if [ "$pids" == "" ]
  then
    echo "Cosmic Agent is not running"
    return 1
  fi
  echo "Cosmic Agent (type=$TYPE) is running: process id: $pids"
  return 0
}

[ "$ENABLED" != 0 ] || exit 0

case "$1" in
   start) start
	  ;;
    stop) stop
 	  ;;
    status) status
 	  ;;
 restart) stop
          start
 	  ;;
       *) echo "Usage: $0 {start|stop|status|restart}"
	  exit 1
	  ;;
esac

exit $RETVAL
